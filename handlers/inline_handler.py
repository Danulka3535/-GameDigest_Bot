from aiogram import Router, F
from aiogram.types import InlineQuery, InlineQueryResultArticle, InputTextMessageContent
from aiogram.fsm.context import FSMContext
from states import Form
from utils import create_keyboard

router = Router()

@router.inline_query()
async def inline_data_request(inline_query: InlineQuery, state: FSMContext):
    user_id = inline_query.from_user.id
    data = await state.get_data()

    # –ï—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Å–ø–∏—Å–æ–∫ —É—á–µ–Ω–∏–∫–æ–≤)
    students = data.get("students", [])
    if not students:
        results = [
            InlineQueryResultArticle(
                id="1",
                title="–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏",
                input_message_content=InputTextMessageContent(
                    message_text="‚ùå –í—ã –Ω–µ –¥–æ–±–∞–≤–∏–ª–∏ –Ω–∏ –æ–¥–Ω–æ–≥–æ —É—á–µ–Ω–∏–∫–∞."
                )
            )
        ]
    else:
        student_list = "\n".join(students)
        results = [
            InlineQueryResultArticle(
                id="1",
                title="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ",
                input_message_content=InputTextMessageContent(
                    message_text=f"üìã –°–ø–∏—Å–æ–∫ —É—á–µ–Ω–∏–∫–æ–≤:\n{student_list}"
                ),
                reply_markup=create_keyboard(["–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", "–û—Ç–º–µ–Ω–∏—Ç—å"])
            )
        ]

    await inline_query.answer(results, cache_time=1)